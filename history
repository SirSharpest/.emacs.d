;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(tmphist tex-compile-history read-expression-history query-replace-history query-replace-from-to-history xref--read-identifier-history magit-revision-history org-tags-history org-read-date-history compile-history file-name-history buffer-name-history ido-buffer-history minibuffer-history extended-command-history yes-or-no-p-history ido-file-history))
(setq tex-compile-history '("pdflatex \\\\nonstopmode\\\\input gravi_ideas.tex" "pdflatex \\\\nonstopmode\\\\input Paper_Review.tex"))
(setq query-replace-history '("" "#" "get_start_weight()" "getStartWeight" "get_status()" "getStatus" "get_experiment_id()" "getExperimentID" "get_experiment_id()" "getExperimentID" "get_end_weight()" "getEndWeight" "get_balance()" "getBalance" "make_connection" "makeConn" "get_start_weight()" "get_start_weight" "get_start_weight" "getStartWeight" "get_experiment_id()" "getExperimentID" "get_end_weight()" "getEndWeight" "get_end_weight()" "getEngWeight" "get_end_weight()" "getEngWeight" "get_balance()" "getBalance" "$" " " "address" "loadCell" "address" "loadCell" "adress" "address" "addres" "addres" "loadCell" "address" "balance" "INT" "int" "INT" "int" "target_length" "MOST_THINGS" "n" "import"))
(setq magit-revision-history '("master" "origin/master" "master" #("origin/master" 0 13 (face magit-branch-remote)) "master" #("origin/master" 0 13 (face magit-branch-remote)) "master" #("origin/master" 0 13 (face magit-branch-remote)) "master" #("origin/master" 0 13 (face magit-branch-remote)) "master" "origin/master" "master" "origin/master" "python_revamp" "origin/master" "master" "SimplifiedFunctions" "Archived-C++" "origin/master"))
(setq org-read-date-history '("   "))
(setq compile-history '("gcc main.c" "make -k "))
(setq file-name-history '("~/.emacs.d/" "~/.emacs.d/init.el" "~/Git/Gravimetrics_Data/Documents/gravi_ideas.tex" "~/Git/Gravimetrics_Data/Documents/gravi_ideas.pdf" "/home/nathan/Git/Gravimetrics_Data/.git/COMMIT_EDITMSG" "~/Git/Gravimetrics_Data/Documents/gravi_ideas.tex" "~/Git/Gravimetrics_Data/Documents/" "~/.emacs.d/org/gravi_ideas.org" "~/.emacs.d/init.el" "~/.emacs.d/org/gravi_ideas.org" "~/.emacs.d/init.el" "~/.emacs.d/org/gravi_ideas.org" "~/.emacs.d/org/gravi_ideas.pdf" "~/.emacs.d/org/gravi_ideas.org" "~/.emacs.d/org/Paper_Review.org" "~/.emacs.d/org/Paper_Review.tex" "~/.emacs.d/init.el" "~/.emacs.d/org/bio_info_notes.org" "/testCable.sh" "~/Git/Gravimetrics_2016/Python/gravi.py" "~/Git/Gravimetrics_2016/Python/database.py" "~/.emacs.d/org/Paper_Review.org" "~/.emacs.d/org/sams_paper.org" "~/.emacs.d/org/bio_info_notes.org" "/home/nathan/Git/Gravimetrics_2016/.git/COMMIT_EDITMSG" "~/Git/Gravimetrics_2016/Gravi_Utils/Makefile" "~/Git/Gravimetrics_2016/setup.sh" "/home/nathan/Git/Gravimetrics_2016/.git/COMMIT_EDITMSG" "~/Git/Gravimetrics_2016/Python/database.py" "~/Git/Gravimetrics_2016/Python/gravi.py" "~/Git/Gravimetrics_2016/Python/emulate_testing.py" "/home/nathan/Git/Gravimetrics_Data/.git/COMMIT_EDITMSG" "~/Git/Gravimetrics_2016/Python/plants.py" "~/Git/Gravimetrics_2016/Python/emulate_testing.py" "/home/nathan/Git/Gravimetrics_2016/.git/COMMIT_EDITMSG" "~/Git/Gravimetrics_2016/Python/plants.py" "~/Git/Gravimetrics_2016/Python/gravi.py" "~/.emacs.d/init.el" "~/Git/Gravimetrics_2016/Python/gravi.py" "~/.emacs.d/init.el" "~/Git/Gravimetrics_2016/Python/gravi.py" "~/.emacs.d/init.el" "~/Git/Gravimetrics_2016/Python/gravi.py" "~/.emacs.d/init.el" "~/Git/Gravimetrics_2016/Python/database.py" "~/Git/Gravimetrics_2016/Python/gravi.py" "~/.emacs.d/org/personal.org" "~/Git/Gravimetrics_2016/Python/database.py" "~/Git/Gravimetrics_2016/Python/gravi.py" "/home/nathan/Git/Gravimetrics_2016/.git/COMMIT_EDITMSG" "~/Git/Gravimetrics_2016/Python/database.py" "~/Git/Gravimetrics_2016/MySQL_Scripts/MYSQL_Testing_Data.sql" "~/Git/Gravimetrics_2016/Python/plants.py" "~/Git/Gravimetrics_2016/Python/database.py" "~/Git/Gravimetrics_2016/Python/DB.py" "/home/nathan/Git/Gravimetrics_2016/.git/COMMIT_EDITMSG" "~/Git/Gravimetrics_2016/Python/DB.py" "~/Git/Gravimetrics_2016/Python/plants.py" "~/.emacs.d/init.el" "~/Git/Gravimetrics_2016/Python/plants.py" "~/.emacs.d/init.el" "~/Git/Gravimetrics_2016/Python/plants.py" "~/Git/Gravimetrics_2016/Python/database.py" "/home/nathan/Git/Gravimetrics_2016/.git/COMMIT_EDITMSG" "~/Git/Gravimetrics_2016/Python/database.py" "~/Git/Gravimetrics_2016/Python/DB.py" "~/Git/Gravimetrics_2016/Python/DB.p" "~/.emacs.d/init.el" "~/Git/Gravimetrics_2016/Python/gravi.py" "~/Git/Gravimetrics_2016/Python/DB.p" "~/Git/Gravimetrics_2016/Python/DB.py" "~/Git/Gravimetrics_2016/Python/plants.py" "~/Git/Gravimetrics_2016/Python/DB.py" "~/.emacs.d/init.el" "/home/nathan/Git/Gravimetrics_2016/.git/MERGE_MSG" "/home/nathan/Git/Gravimetrics_2016/.git/COMMIT_EDITMSG" "~/Git/Gravimetrics_2016/README.md" "/home/nathan/Git/Gravimetrics_2016/.git/COMMIT_EDITMSG" "~/Git/Gravimetrics_2016/MySQL_Scripts/MYSQL_Testing_Data.sql" "~/Git/Gravimetrics_2016/MySQL_Scripts/Commands_Used.sql" "~/Git/Gravimetrics_2016/Python/plants.py" "~/Git/Gravimetrics_2016/Python/DB.py" "~/Git/Gravimetrics_2016" "/home/nathan/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "/home/nathan/Git/Gravimetrics_2016/.git/COMMIT_EDITMSG" "~/Git/Gravimetrics_2016/MySQL_Scripts/Commands_Used.sql" "~/Git/Gravimetrics_2016/MySQL_Scripts/MYSQL_Testing_Data.sql" "~/Git/Gravimetrics_2016/MySQL_Scripts/MYSQL_Testing_Setup.sql" "~/Git/Gravimetrics_2016/MySQL_Scripts/Commands_Used.sql" "~/Git/Gravimetrics_2016/Python/DB.py" "/home/nathan/Git/something-for-reddit/.git/COMMIT_EDITMSG" "~/Git/something-for-reddit/README.md" "~/Git/something-for-reddit/" "~/Git/Gravimetrics_2016/MySQL_Scripts/MYSQL_Testing_Setup.sql" "~/Git/Gravimetrics_2016/Python/DB.py" "~/Git/Gravimetrics_2016/Python/gravi.py" "/home/nathan/.emacs.d/org/NPPC.org" "/home/nathan/Git/Gravimetrics_2016/.git/COMMIT_EDITMSG" "~/Git/Gravimetrics_2016/README.md"))
(setq buffer-name-history '("test.py" "*Python*"))
(setq minibuffer-history '("auctex" "beam jack" "Amazon" #("addon" 0 5 (fontified t face font-lock-comment-face)) "PDF of this model " "this cheap one" "Expensive one" "Drawing inspiration from this example" "/bin/bash" "Paper_Review.org" "/bin/bash" "origin" #("connections" 0 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face)) "python" "py-autopep8" "python" "/bin/bash" "support.plant-phenomics.ac.uk" "support-plant-phenomics.co.uk" "google.com" "origin" "database.py" #("end" 0 3 (face font-lock-doc-face fontified t)) "database.py" #("4" 0 1 (fontified t)) #("end-of-buffer" 0 13 (fontified t)) #("|" 0 1 (font-lock-face term fontified t)) "/bin/bash" "sirsharpest" "/bin/bash" "sirsharpest" "/bin/bash" "pcgamer.com" "google.com" "www.pcgamer.com" "pcgamer.com" "google.com" "/bin/bash" "sirsharpest" "origin" "/bin/bash" "alect-dark" "alect-themes" "zenburn" "/bin/bash" "python" "sirsharpest" "/bin/bash" "sirsharpest" "python" "sirsharpest" "/bin/bash" "origin" #("gcc" 0 3 (fontified t font-lock-face (:foreground "#333333" :background "#FFFFFF" :inverse-video nil))) "/bin/bash" "sirsharpest" #("statement" 0 9 (face font-lock-comment-face fontified t)) "sr-speedbar" "/bin/bash" "Emacs" "/bin/bash" "Old-C++" "/bin/bash" "sirsharpest" "magit" #("the" 0 1 (fontified t c-in-sws t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face c-in-sws t) 2 3 (fontified t c-in-sws t face font-lock-comment-face)) "information" "Editing" "c" "tab" "neotree" "tabbar" "zenburn" "material-theme" #(">>>" 0 3 (fontified t front-sticky (read-only) rear-nonsticky t field output inhibit-line-move-field-capture t read-only t font-lock-face (comint-highlight-prompt))) "python" "Emacs" "python" "elpy" "github-theme" "1" "highlight-indentation" "fill-column-indicator" #("cfsetospeed" 0 11 (fontified t)) "Emacs" "ido"))
(setq extended-command-history '("package-install" "package-refresh-contents" "org-latex-export-to-pdf" "org-display-inline-images" "org-latex-export-to-pdf" "org-insert-link" "org-latex-export-to-pdf" "org-display-inline-images" "org-latex-export-to-pdf" "org-insert-link" "org-latex-export-to-pdf" "org-display-inline-images" "org-latex-export-to-pdf" "flyspell-auto-correct-previous-word" "org-latex-export-to-pdf" "org-display-inline-images" "org-latex-export-to-pdf" "company-complete" "flyspell-correct-word" "flyspell-auto-correct-previous-word" "ispell-buffer" "ispell-minor-mode" "package-install" "package-refresh-contents" "package-install" "org-latex-export-to-pdf" "org-display-inline-images" "org-latex-export-to-pdf" "org-insert-link" "flyspell-correct-word-generic" "flyspell-correct-word" "doc-view-fit-page-to-window" "org-latex-export-to-pdf" "doc-view-next-page" "flyspell-mode" "flyspell-buffer" "org-latex-export-to-pdf" "org-display-inline-images" "org-latex-export-to-pdf" "org-display-inline-images" "org-insert-link" "org-latex-export-to-pdf" "org-display-inline-images" "flyspell-mode" "flycheck-mode" "org-latex-export-to-pdf" "flyspell-buffer" "shell" "flyspell-mode" "flyspell-correct-word-generic" "org-latex-export-to-pdf" "rename-file-and-buffer" "org-latex-export-to-pdf" "flyspell-correct-word" "flyspell-mode" "replace-regexp" "my-restart-python-console" "customize-group" "package-install" "recover-this-file" "replace-regexp" "indent-region" "customize-group" "eww" "replace-regexp" "rename-file-and-buffer" "underscore-region" "recover-this-file" "rename-file-and-buffer" "flycheck-buffer" "replace-regexp" "whitespace-mode" "beginning-of-buffer" "end-of-buffer" "replace-regexp" "recover-this-file" "magit-status" "recover-this-file" "magit-status" "recover-this-file" "browse-url-text-emacs" "browse-url-emacs" "browse-url-firefox" "magit-status" "replace-regexp" "transpose-lines" "magit-status" "scroll-bar-mode" "tool-bar-mode" "menu-bar-mode" "magit-status" "eshell" "magit-status" "load-theme" "package-install" "load-theme" "recover-this-file" "customize-group" "magit-status" "sr-speedbar-toggle"))
(setq yes-or-no-p-history '("yes" "no" "yes" "no" "yes" "y" "yes" "y" "yes"))
(setq ido-file-history '("init.el" "prepStatements.py" nil "init.el"))
